type: google.api.Service
config_version: 3
name: memcache.googleapis.com
title: Cloud Memorystore for Memcached API

apis:
- name: google.cloud.memcache.v1beta2.CloudMemcache

types:
- name: google.cloud.memcache.v1beta2.LocationMetadata
- name: google.cloud.memcache.v1beta2.OperationMetadata

documentation:
  summary: |-
    Google Cloud Memorystore for Memcached API is used for creating and
    managing Memcached instances in GCP.
  rules:
  - selector: google.iam.v1.IAMPolicy.GetIamPolicy
    description: |-
      Gets the access control policy for a resource. Returns an empty policy
      if the resource exists and does not have a policy set.

  - selector: google.iam.v1.IAMPolicy.SetIamPolicy
    description: |-
      Sets the access control policy on the specified resource. Replaces
      any existing policy.

      Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and
      PERMISSION_DENIED

  - selector: google.iam.v1.IAMPolicy.TestIamPermissions
    description: |-
      Returns permissions that a caller has on the specified resource. If the
      resource does not exist, this will return an empty set of
      permissions, not a NOT_FOUND error.

      Note: This operation is designed to be used for building
      permission-aware UIs and command-line tools, not for authorization
      checking. This operation may "fail open" without warning.

backend:
  rules:
  - selector: google.cloud.memcache.v1beta2.CloudMemcache.GetInstance
    deadline: 60.0
  - selector: google.cloud.memcache.v1beta2.CloudMemcache.ListInstances
    deadline: 60.0
  - selector: 'google.iam.v1.IAMPolicy.*'
    deadline: 60.0
  - selector: 'google.longrunning.Operations.*'
    deadline: 60.0
  - selector: google.longrunning.Operations.GetOperation
    deadline: 5.0

http:
  rules:
  - selector: google.iam.v1.IAMPolicy.GetIamPolicy
    get: '/v1beta2/{resource=projects/*/locations/*/instances/*}:getIamPolicy'
  - selector: google.iam.v1.IAMPolicy.SetIamPolicy
    post: '/v1beta2/{resource=projects/*/locations/*/instances/*}:setIamPolicy'
    body: '*'
  - selector: google.iam.v1.IAMPolicy.TestIamPermissions
    post: '/v1beta2/{resource=projects/*/locations/*/instances/*}:testIamPermissions'
    body: '*'
  - selector: google.longrunning.Operations.CancelOperation
    post: '/v1beta2/{name=projects/*/locations/*/operations/*}:cancel'
    body: '*'
  - selector: google.longrunning.Operations.DeleteOperation
    delete: '/v1beta2/{name=projects/*/locations/*/operations/*}'
  - selector: google.longrunning.Operations.GetOperation
    get: '/v1beta2/{name=projects/*/locations/*/operations/*}'
  - selector: google.longrunning.Operations.ListOperations
    get: '/v1beta2/{name=projects/*/locations/*}/operations'

authentication:
  rules:
  - selector: 'google.cloud.memcache.v1beta2.CloudMemcache.*'
    oauth:
      canonical_scopes: |-
        https://www.googleapis.com/auth/cloud-platform
  - selector: 'google.iam.v1.IAMPolicy.*'
    oauth:
      canonical_scopes: |-
        https://www.googleapis.com/auth/cloud-platform
  - selector: 'google.longrunning.Operations.*'
    oauth:
      canonical_scopes: |-
        https://www.googleapis.com/auth/cloud-platform
