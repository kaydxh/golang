// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        v3.13.0
// source: pkg/resolver/resolver.proto

package resolver

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Resolver_ResolverType int32

const (
	Resolver_resolver_type_dns    Resolver_ResolverType = 0
	Resolver_resolver_type_consul Resolver_ResolverType = 1
	Resolver_resolver_type_k8s    Resolver_ResolverType = 2
)

// Enum value maps for Resolver_ResolverType.
var (
	Resolver_ResolverType_name = map[int32]string{
		0: "resolver_type_dns",
		1: "resolver_type_consul",
		2: "resolver_type_k8s",
	}
	Resolver_ResolverType_value = map[string]int32{
		"resolver_type_dns":    0,
		"resolver_type_consul": 1,
		"resolver_type_k8s":    2,
	}
)

func (x Resolver_ResolverType) Enum() *Resolver_ResolverType {
	p := new(Resolver_ResolverType)
	*p = x
	return p
}

func (x Resolver_ResolverType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Resolver_ResolverType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_resolver_resolver_proto_enumTypes[0].Descriptor()
}

func (Resolver_ResolverType) Type() protoreflect.EnumType {
	return &file_pkg_resolver_resolver_proto_enumTypes[0]
}

func (x Resolver_ResolverType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Resolver_ResolverType.Descriptor instead.
func (Resolver_ResolverType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_resolver_resolver_proto_rawDescGZIP(), []int{0, 0}
}

type Resolver_LoadBalanceMode int32

const (
	Resolver_load_balance_mode_random  Resolver_LoadBalanceMode = 0
	Resolver_load_balance_mode_consist Resolver_LoadBalanceMode = 1
)

// Enum value maps for Resolver_LoadBalanceMode.
var (
	Resolver_LoadBalanceMode_name = map[int32]string{
		0: "load_balance_mode_random",
		1: "load_balance_mode_consist",
	}
	Resolver_LoadBalanceMode_value = map[string]int32{
		"load_balance_mode_random":  0,
		"load_balance_mode_consist": 1,
	}
)

func (x Resolver_LoadBalanceMode) Enum() *Resolver_LoadBalanceMode {
	p := new(Resolver_LoadBalanceMode)
	*p = x
	return p
}

func (x Resolver_LoadBalanceMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Resolver_LoadBalanceMode) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_resolver_resolver_proto_enumTypes[1].Descriptor()
}

func (Resolver_LoadBalanceMode) Type() protoreflect.EnumType {
	return &file_pkg_resolver_resolver_proto_enumTypes[1]
}

func (x Resolver_LoadBalanceMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Resolver_LoadBalanceMode.Descriptor instead.
func (Resolver_LoadBalanceMode) EnumDescriptor() ([]byte, []int) {
	return file_pkg_resolver_resolver_proto_rawDescGZIP(), []int{0, 1}
}

type Resolver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled         bool                     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ResolverType    Resolver_ResolverType    `protobuf:"varint,2,opt,name=resolver_type,json=resolverType,proto3,enum=go.pkg.resolver.Resolver_ResolverType" json:"resolver_type,omitempty"`
	LoadBalanceMode Resolver_LoadBalanceMode `protobuf:"varint,3,opt,name=load_balance_mode,json=loadBalanceMode,proto3,enum=go.pkg.resolver.Resolver_LoadBalanceMode" json:"load_balance_mode,omitempty"`
	ResolveInterval *duration.Duration       `protobuf:"bytes,4,opt,name=resolve_interval,json=resolveInterval,proto3" json:"resolve_interval,omitempty"`
	Domains         []string                 `protobuf:"bytes,5,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *Resolver) Reset() {
	*x = Resolver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_resolver_resolver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resolver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resolver) ProtoMessage() {}

func (x *Resolver) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_resolver_resolver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resolver.ProtoReflect.Descriptor instead.
func (*Resolver) Descriptor() ([]byte, []int) {
	return file_pkg_resolver_resolver_proto_rawDescGZIP(), []int{0}
}

func (x *Resolver) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Resolver) GetResolverType() Resolver_ResolverType {
	if x != nil {
		return x.ResolverType
	}
	return Resolver_resolver_type_dns
}

func (x *Resolver) GetLoadBalanceMode() Resolver_LoadBalanceMode {
	if x != nil {
		return x.LoadBalanceMode
	}
	return Resolver_load_balance_mode_random
}

func (x *Resolver) GetResolveInterval() *duration.Duration {
	if x != nil {
		return x.ResolveInterval
	}
	return nil
}

func (x *Resolver) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

var File_pkg_resolver_resolver_proto protoreflect.FileDescriptor

var file_pkg_resolver_resolver_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x67,
	0x6f, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0,
	0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x4b, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x67,
	0x6f, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x55, 0x0a, 0x11, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e,
	0x67, 0x6f, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0f, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x56, 0x0a, 0x0c, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x6e, 0x73, 0x10, 0x00,
	0x12, 0x18, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6b, 0x38, 0x73, 0x10,
	0x02, 0x22, 0x4e, 0x0a, 0x0f, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x10,
	0x01, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6b, 0x61, 0x79, 0x64, 0x78, 0x68, 0x2f, 0x67, 0x6f, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x3b, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_resolver_resolver_proto_rawDescOnce sync.Once
	file_pkg_resolver_resolver_proto_rawDescData = file_pkg_resolver_resolver_proto_rawDesc
)

func file_pkg_resolver_resolver_proto_rawDescGZIP() []byte {
	file_pkg_resolver_resolver_proto_rawDescOnce.Do(func() {
		file_pkg_resolver_resolver_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_resolver_resolver_proto_rawDescData)
	})
	return file_pkg_resolver_resolver_proto_rawDescData
}

var file_pkg_resolver_resolver_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pkg_resolver_resolver_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_resolver_resolver_proto_goTypes = []interface{}{
	(Resolver_ResolverType)(0),    // 0: go.pkg.resolver.Resolver.ResolverType
	(Resolver_LoadBalanceMode)(0), // 1: go.pkg.resolver.Resolver.LoadBalanceMode
	(*Resolver)(nil),              // 2: go.pkg.resolver.Resolver
	(*duration.Duration)(nil),     // 3: google.protobuf.Duration
}
var file_pkg_resolver_resolver_proto_depIdxs = []int32{
	0, // 0: go.pkg.resolver.Resolver.resolver_type:type_name -> go.pkg.resolver.Resolver.ResolverType
	1, // 1: go.pkg.resolver.Resolver.load_balance_mode:type_name -> go.pkg.resolver.Resolver.LoadBalanceMode
	3, // 2: go.pkg.resolver.Resolver.resolve_interval:type_name -> google.protobuf.Duration
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_resolver_resolver_proto_init() }
func file_pkg_resolver_resolver_proto_init() {
	if File_pkg_resolver_resolver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_resolver_resolver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resolver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_resolver_resolver_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_resolver_resolver_proto_goTypes,
		DependencyIndexes: file_pkg_resolver_resolver_proto_depIdxs,
		EnumInfos:         file_pkg_resolver_resolver_proto_enumTypes,
		MessageInfos:      file_pkg_resolver_resolver_proto_msgTypes,
	}.Build()
	File_pkg_resolver_resolver_proto = out.File
	file_pkg_resolver_resolver_proto_rawDesc = nil
	file_pkg_resolver_resolver_proto_goTypes = nil
	file_pkg_resolver_resolver_proto_depIdxs = nil
}
