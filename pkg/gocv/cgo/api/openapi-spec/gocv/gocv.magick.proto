syntax = "proto3";
package sdk.api.gocv;

import "api/openapi-spec/types/code/sdk-go.code.proto";

option go_package = "github.com/kaydxh/golang/pkg/gocv/cgo/api/openapi-spec/gocv;gocv";

message MagickInitializeMagickRequest {
  string path = 1;
}

message MagickInitializeMagickResponse {
  sdk.types.code.CgoError error = 1;
}

message MagickImageDecodeRequest {
  bytes image = 1;
  string target_color_space = 2;  // support BGR BGRA GRA GRAYA, default BGRA
}

message MagickImageDecodeResponse {
  sdk.types.code.CgoError error = 1;
  int64 cv_mat_pointer = 2;  // pointer of cv::Mat
  int64 rows = 3;            //  Image height
  int64 columns = 4;         //  Image width
  string magick = 5;         // File type magick identifier (.e.g "GIF")
  OrientationType orientation_type = 6;
  ColorspaceType colorspace_type = 7;
}

enum OrientationType {
  UndefinedOrientation = 0;
  TopLeftOrientation = 1;
  TopRightOrientation = 2;
  BottomRightOrientation = 3;
  BottomLeftOrientation = 4;
  LeftTopOrientation = 5;
  RightTopOrientation = 6;
  RightBottomOrientation = 7;
  LeftBottomOrientation = 8;
}

// graphics-magick/include/magick/colorspace.h
enum ColorspaceType {
  UndefinedColorspace = 0;
  RGBColorspace = 1;  /* Plain old RGB colorspace */
  GRAYColorspace = 2; /* Plain old full-range grayscale */
  TransparentColorspace =
      3; /* RGB but preserve matte channel during quantize */
  OHTAColorspace = 4;
  XYZColorspace = 5; /* CIE XYZ */
  YCCColorspace = 6; /* Kodak PhotoCD PhotoYCC */
  YIQColorspace = 7;
  YPbPrColorspace = 8;
  YUVColorspace = 9;
  CMYKColorspace = 10; /* Cyan, magenta, yellow, black, alpha */
  sRGBColorspace = 11; /* Kodak PhotoCD sRGB */
  HSLColorspace = 12;  /* Hue, saturation, luminosity */
  HWBColorspace = 13;  /* Hue, whiteness, blackness */
  LABColorspace = 14; /* LAB colorspace not supported yet other than via lcms */
  CineonLogRGBColorspace =
      15; /* RGB data with Cineon Log scaling, 2.048 density range */
  Rec601LumaColorspace = 16;  /* Luma (Y) according to ITU-R 601 */
  Rec601YCbCrColorspace = 17; /* YCbCr according to ITU-R 601 */
  Rec709LumaColorspace = 18;  /* Luma (Y) according to ITU-R 709 */
  Rec709YCbCrColorspace = 19; /* YCbCr according to ITU-R 709 */
}
