// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/openapi-spec/types/code/sdk-go.code.proto

#ifndef PROTOBUF_INCLUDED_api_2fopenapi_2dspec_2ftypes_2fcode_2fsdk_2dgo_2ecode_2eproto
#define PROTOBUF_INCLUDED_api_2fopenapi_2dspec_2ftypes_2fcode_2fsdk_2dgo_2ecode_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_api_2fopenapi_2dspec_2ftypes_2fcode_2fsdk_2dgo_2ecode_2eproto 

namespace protobuf_api_2fopenapi_2dspec_2ftypes_2fcode_2fsdk_2dgo_2ecode_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_api_2fopenapi_2dspec_2ftypes_2fcode_2fsdk_2dgo_2ecode_2eproto
namespace sdk {
namespace types {
namespace code {
class CgoError;
class CgoErrorDefaultTypeInternal;
extern CgoErrorDefaultTypeInternal _CgoError_default_instance_;
}  // namespace code
}  // namespace types
}  // namespace sdk
namespace google {
namespace protobuf {
template<> ::sdk::types::code::CgoError* Arena::CreateMaybeMessage<::sdk::types::code::CgoError>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace sdk {
namespace types {
namespace code {

enum Code {
  OK = 0,
  Canceled = 1,
  Unknown = 2,
  InvalidArgument = 3,
  DeadlineExceeded = 4,
  NotFound = 5,
  AlreadyExists = 6,
  PermissionDenied = 7,
  ResourceExhausted = 8,
  FailedPrecondition = 9,
  Aborted = 10,
  OutOfRange = 11,
  Unimplemented = 12,
  Internal = 13,
  Unavailable = 14,
  DataLoss = 15,
  Unauthenticated = 16,
  Code_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Code_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Code_IsValid(int value);
const Code Code_MIN = OK;
const Code Code_MAX = Unauthenticated;
const int Code_ARRAYSIZE = Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* Code_descriptor();
inline const ::std::string& Code_Name(Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    Code_descriptor(), value);
}
inline bool Code_Parse(
    const ::std::string& name, Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Code>(
    Code_descriptor(), name, value);
}
// ===================================================================

class CgoError : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sdk.types.code.CgoError) */ {
 public:
  CgoError();
  virtual ~CgoError();

  CgoError(const CgoError& from);

  inline CgoError& operator=(const CgoError& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CgoError(CgoError&& from) noexcept
    : CgoError() {
    *this = ::std::move(from);
  }

  inline CgoError& operator=(CgoError&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CgoError& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CgoError* internal_default_instance() {
    return reinterpret_cast<const CgoError*>(
               &_CgoError_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CgoError* other);
  friend void swap(CgoError& a, CgoError& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CgoError* New() const final {
    return CreateMaybeMessage<CgoError>(NULL);
  }

  CgoError* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CgoError>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CgoError& from);
  void MergeFrom(const CgoError& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CgoError* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_message = 2;
  void clear_error_message();
  static const int kErrorMessageFieldNumber = 2;
  const ::std::string& error_message() const;
  void set_error_message(const ::std::string& value);
  #if LANG_CXX11
  void set_error_message(::std::string&& value);
  #endif
  void set_error_message(const char* value);
  void set_error_message(const char* value, size_t size);
  ::std::string* mutable_error_message();
  ::std::string* release_error_message();
  void set_allocated_error_message(::std::string* error_message);

  // string sdk_error_message = 4;
  void clear_sdk_error_message();
  static const int kSdkErrorMessageFieldNumber = 4;
  const ::std::string& sdk_error_message() const;
  void set_sdk_error_message(const ::std::string& value);
  #if LANG_CXX11
  void set_sdk_error_message(::std::string&& value);
  #endif
  void set_sdk_error_message(const char* value);
  void set_sdk_error_message(const char* value, size_t size);
  ::std::string* mutable_sdk_error_message();
  ::std::string* release_sdk_error_message();
  void set_allocated_sdk_error_message(::std::string* sdk_error_message);

  // .sdk.types.code.Code error_code = 1;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::sdk::types::code::Code error_code() const;
  void set_error_code(::sdk::types::code::Code value);

  // int32 sdk_error_code = 3;
  void clear_sdk_error_code();
  static const int kSdkErrorCodeFieldNumber = 3;
  ::google::protobuf::int32 sdk_error_code() const;
  void set_sdk_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sdk.types.code.CgoError)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_message_;
  ::google::protobuf::internal::ArenaStringPtr sdk_error_message_;
  int error_code_;
  ::google::protobuf::int32 sdk_error_code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_api_2fopenapi_2dspec_2ftypes_2fcode_2fsdk_2dgo_2ecode_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CgoError

// .sdk.types.code.Code error_code = 1;
inline void CgoError::clear_error_code() {
  error_code_ = 0;
}
inline ::sdk::types::code::Code CgoError::error_code() const {
  // @@protoc_insertion_point(field_get:sdk.types.code.CgoError.error_code)
  return static_cast< ::sdk::types::code::Code >(error_code_);
}
inline void CgoError::set_error_code(::sdk::types::code::Code value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:sdk.types.code.CgoError.error_code)
}

// string error_message = 2;
inline void CgoError::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CgoError::error_message() const {
  // @@protoc_insertion_point(field_get:sdk.types.code.CgoError.error_message)
  return error_message_.GetNoArena();
}
inline void CgoError::set_error_message(const ::std::string& value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sdk.types.code.CgoError.error_message)
}
#if LANG_CXX11
inline void CgoError::set_error_message(::std::string&& value) {
  
  error_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sdk.types.code.CgoError.error_message)
}
#endif
inline void CgoError::set_error_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sdk.types.code.CgoError.error_message)
}
inline void CgoError::set_error_message(const char* value, size_t size) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sdk.types.code.CgoError.error_message)
}
inline ::std::string* CgoError::mutable_error_message() {
  
  // @@protoc_insertion_point(field_mutable:sdk.types.code.CgoError.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CgoError::release_error_message() {
  // @@protoc_insertion_point(field_release:sdk.types.code.CgoError.error_message)
  
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CgoError::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:sdk.types.code.CgoError.error_message)
}

// int32 sdk_error_code = 3;
inline void CgoError::clear_sdk_error_code() {
  sdk_error_code_ = 0;
}
inline ::google::protobuf::int32 CgoError::sdk_error_code() const {
  // @@protoc_insertion_point(field_get:sdk.types.code.CgoError.sdk_error_code)
  return sdk_error_code_;
}
inline void CgoError::set_sdk_error_code(::google::protobuf::int32 value) {
  
  sdk_error_code_ = value;
  // @@protoc_insertion_point(field_set:sdk.types.code.CgoError.sdk_error_code)
}

// string sdk_error_message = 4;
inline void CgoError::clear_sdk_error_message() {
  sdk_error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CgoError::sdk_error_message() const {
  // @@protoc_insertion_point(field_get:sdk.types.code.CgoError.sdk_error_message)
  return sdk_error_message_.GetNoArena();
}
inline void CgoError::set_sdk_error_message(const ::std::string& value) {
  
  sdk_error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sdk.types.code.CgoError.sdk_error_message)
}
#if LANG_CXX11
inline void CgoError::set_sdk_error_message(::std::string&& value) {
  
  sdk_error_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sdk.types.code.CgoError.sdk_error_message)
}
#endif
inline void CgoError::set_sdk_error_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sdk_error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sdk.types.code.CgoError.sdk_error_message)
}
inline void CgoError::set_sdk_error_message(const char* value, size_t size) {
  
  sdk_error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sdk.types.code.CgoError.sdk_error_message)
}
inline ::std::string* CgoError::mutable_sdk_error_message() {
  
  // @@protoc_insertion_point(field_mutable:sdk.types.code.CgoError.sdk_error_message)
  return sdk_error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CgoError::release_sdk_error_message() {
  // @@protoc_insertion_point(field_release:sdk.types.code.CgoError.sdk_error_message)
  
  return sdk_error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CgoError::set_allocated_sdk_error_message(::std::string* sdk_error_message) {
  if (sdk_error_message != NULL) {
    
  } else {
    
  }
  sdk_error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdk_error_message);
  // @@protoc_insertion_point(field_set_allocated:sdk.types.code.CgoError.sdk_error_message)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace code
}  // namespace types
}  // namespace sdk

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::sdk::types::code::Code> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sdk::types::code::Code>() {
  return ::sdk::types::code::Code_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_api_2fopenapi_2dspec_2ftypes_2fcode_2fsdk_2dgo_2ecode_2eproto
