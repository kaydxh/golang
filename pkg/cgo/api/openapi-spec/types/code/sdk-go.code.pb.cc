// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: types/sdk-go.code.proto

#include "types/sdk-go.code.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace sdk {
namespace types {
namespace code {
class CgoErrorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CgoError> _instance;
} _CgoError_default_instance_;
}  // namespace code
}  // namespace types
}  // namespace sdk
static void InitDefaultsscc_info_CgoError_types_2fsdk_2dgo_2ecode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sdk::types::code::_CgoError_default_instance_;
    new (ptr) ::sdk::types::code::CgoError();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sdk::types::code::CgoError::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CgoError_types_2fsdk_2dgo_2ecode_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CgoError_types_2fsdk_2dgo_2ecode_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_types_2fsdk_2dgo_2ecode_2eproto[1];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_types_2fsdk_2dgo_2ecode_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_types_2fsdk_2dgo_2ecode_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_types_2fsdk_2dgo_2ecode_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sdk::types::code::CgoError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sdk::types::code::CgoError, error_code_),
  PROTOBUF_FIELD_OFFSET(::sdk::types::code::CgoError, error_message_),
  PROTOBUF_FIELD_OFFSET(::sdk::types::code::CgoError, sdk_error_code_),
  PROTOBUF_FIELD_OFFSET(::sdk::types::code::CgoError, sdk_error_message_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::sdk::types::code::CgoError)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sdk::types::code::_CgoError_default_instance_),
};

const char descriptor_table_protodef_types_2fsdk_2dgo_2ecode_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027types/sdk-go.code.proto\022\016sdk.types.cod"
  "e\"~\n\010CgoError\022(\n\nerror_code\030\001 \001(\0162\024.sdk."
  "types.code.Code\022\025\n\rerror_message\030\002 \001(\t\022\026"
  "\n\016sdk_error_code\030\003 \001(\005\022\031\n\021sdk_error_mess"
  "age\030\004 \001(\t*\254\002\n\004Code\022\006\n\002OK\020\000\022\014\n\010Canceled\020\001"
  "\022\013\n\007Unknown\020\002\022\023\n\017InvalidArgument\020\003\022\024\n\020De"
  "adlineExceeded\020\004\022\014\n\010NotFound\020\005\022\021\n\rAlread"
  "yExists\020\006\022\024\n\020PermissionDenied\020\007\022\025\n\021Resou"
  "rceExhausted\020\010\022\026\n\022FailedPrecondition\020\t\022\013"
  "\n\007Aborted\020\n\022\016\n\nOutOfRange\020\013\022\021\n\rUnimpleme"
  "nted\020\014\022\014\n\010Internal\020\r\022\017\n\013Unavailable\020\016\022\014\n"
  "\010DataLoss\020\017\022\023\n\017Unauthenticated\020\020BCZAgith"
  "ub.com/kaydxh/golang/pkg/cgo/api/openapi"
  "-spec/types/code;codeb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_types_2fsdk_2dgo_2ecode_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_types_2fsdk_2dgo_2ecode_2eproto_sccs[1] = {
  &scc_info_CgoError_types_2fsdk_2dgo_2ecode_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_types_2fsdk_2dgo_2ecode_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_types_2fsdk_2dgo_2ecode_2eproto = {
  false, false, descriptor_table_protodef_types_2fsdk_2dgo_2ecode_2eproto, "types/sdk-go.code.proto", 549,
  &descriptor_table_types_2fsdk_2dgo_2ecode_2eproto_once, descriptor_table_types_2fsdk_2dgo_2ecode_2eproto_sccs, descriptor_table_types_2fsdk_2dgo_2ecode_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_types_2fsdk_2dgo_2ecode_2eproto::offsets,
  file_level_metadata_types_2fsdk_2dgo_2ecode_2eproto, 1, file_level_enum_descriptors_types_2fsdk_2dgo_2ecode_2eproto, file_level_service_descriptors_types_2fsdk_2dgo_2ecode_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_types_2fsdk_2dgo_2ecode_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_types_2fsdk_2dgo_2ecode_2eproto)), true);
namespace sdk {
namespace types {
namespace code {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Code_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_types_2fsdk_2dgo_2ecode_2eproto);
  return file_level_enum_descriptors_types_2fsdk_2dgo_2ecode_2eproto[0];
}
bool Code_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CgoError::InitAsDefaultInstance() {
}
class CgoError::_Internal {
 public:
};

CgoError::CgoError(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sdk.types.code.CgoError)
}
CgoError::CgoError(const CgoError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_message().empty()) {
    error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_message(),
      GetArena());
  }
  sdk_error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sdk_error_message().empty()) {
    sdk_error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sdk_error_message(),
      GetArena());
  }
  ::memcpy(&error_code_, &from.error_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&sdk_error_code_) -
    reinterpret_cast<char*>(&error_code_)) + sizeof(sdk_error_code_));
  // @@protoc_insertion_point(copy_constructor:sdk.types.code.CgoError)
}

void CgoError::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CgoError_types_2fsdk_2dgo_2ecode_2eproto.base);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sdk_error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sdk_error_code_) -
      reinterpret_cast<char*>(&error_code_)) + sizeof(sdk_error_code_));
}

CgoError::~CgoError() {
  // @@protoc_insertion_point(destructor:sdk.types.code.CgoError)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CgoError::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  error_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sdk_error_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CgoError::ArenaDtor(void* object) {
  CgoError* _this = reinterpret_cast< CgoError* >(object);
  (void)_this;
}
void CgoError::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CgoError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CgoError& CgoError::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CgoError_types_2fsdk_2dgo_2ecode_2eproto.base);
  return *internal_default_instance();
}


void CgoError::Clear() {
// @@protoc_insertion_point(message_clear_start:sdk.types.code.CgoError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sdk_error_message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&error_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sdk_error_code_) -
      reinterpret_cast<char*>(&error_code_)) + sizeof(sdk_error_code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CgoError::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .sdk.types.code.Code error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_error_code(static_cast<::sdk::types::code::Code>(val));
        } else goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sdk.types.code.CgoError.error_message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sdk_error_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          sdk_error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sdk_error_message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_sdk_error_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sdk.types.code.CgoError.sdk_error_message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CgoError::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sdk.types.code.CgoError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sdk.types.code.Code error_code = 1;
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_error_code(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sdk.types.code.CgoError.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  // int32 sdk_error_code = 3;
  if (this->sdk_error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_sdk_error_code(), target);
  }

  // string sdk_error_message = 4;
  if (this->sdk_error_message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sdk_error_message().data(), static_cast<int>(this->_internal_sdk_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sdk.types.code.CgoError.sdk_error_message");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sdk_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sdk.types.code.CgoError)
  return target;
}

size_t CgoError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sdk.types.code.CgoError)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // string sdk_error_message = 4;
  if (this->sdk_error_message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sdk_error_message());
  }

  // .sdk.types.code.Code error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_error_code());
  }

  // int32 sdk_error_code = 3;
  if (this->sdk_error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sdk_error_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CgoError::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sdk.types.code.CgoError)
  GOOGLE_DCHECK_NE(&from, this);
  const CgoError* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CgoError>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sdk.types.code.CgoError)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sdk.types.code.CgoError)
    MergeFrom(*source);
  }
}

void CgoError::MergeFrom(const CgoError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sdk.types.code.CgoError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {
    _internal_set_error_message(from._internal_error_message());
  }
  if (from.sdk_error_message().size() > 0) {
    _internal_set_sdk_error_message(from._internal_sdk_error_message());
  }
  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
  if (from.sdk_error_code() != 0) {
    _internal_set_sdk_error_code(from._internal_sdk_error_code());
  }
}

void CgoError::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sdk.types.code.CgoError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CgoError::CopyFrom(const CgoError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sdk.types.code.CgoError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CgoError::IsInitialized() const {
  return true;
}

void CgoError::InternalSwap(CgoError* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  error_message_.Swap(&other->error_message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sdk_error_message_.Swap(&other->sdk_error_message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CgoError, sdk_error_code_)
      + sizeof(CgoError::sdk_error_code_)
      - PROTOBUF_FIELD_OFFSET(CgoError, error_code_)>(
          reinterpret_cast<char*>(&error_code_),
          reinterpret_cast<char*>(&other->error_code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CgoError::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace code
}  // namespace types
}  // namespace sdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::sdk::types::code::CgoError* Arena::CreateMaybeMessage< ::sdk::types::code::CgoError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sdk::types::code::CgoError >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
